{"ast":null,"code":"var _jsxFileName = \"/Users/malloc/Documents/CV/src/App.js\";\nimport Loading from './Menu/LoadingScreen';\nimport { BrowserRouter } from 'react-router-dom';\nimport { motion } from 'framer-motion';\n//import { Routes } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport Logo from './Menu/Logo';\nimport Presentation from './Pages/Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  // const [isLoaded, setIsLoaded] = useState(false);\n\n  // // Utilisez useEffect pour simuler le chargement initial du site\n  // useEffect(() => {\n  //   // Simulez un délai de chargement\n  //   const timer = setTimeout(() => {\n  //     setIsLoaded(true);\n  //   }, 3000); // temps en millisecondes, ajustez selon vos besoins\n\n  //   // Assurez-vous de nettoyer le timer lors du démontage du composant\n  //   return () => clearTimeout(timer);\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Presentation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Loading","BrowserRouter","motion","React","useState","useEffect","Logo","Presentation","jsxDEV","_jsxDEV","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/malloc/Documents/CV/src/App.js"],"sourcesContent":["import Loading from './Menu/LoadingScreen'\nimport { BrowserRouter } from 'react-router-dom';\nimport { motion } from 'framer-motion';\n//import { Routes } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport Logo from './Menu/Logo'\nimport Presentation from './Pages/Home'\n\nconst App = () => {\n  // const [isLoaded, setIsLoaded] = useState(false);\n\n  // // Utilisez useEffect pour simuler le chargement initial du site\n  // useEffect(() => {\n  //   // Simulez un délai de chargement\n  //   const timer = setTimeout(() => {\n  //     setIsLoaded(true);\n  //   }, 3000); // temps en millisecondes, ajustez selon vos besoins\n\n  //   // Assurez-vous de nettoyer le timer lors du démontage du composant\n  //   return () => clearTimeout(timer);\n  // }, []);\n\n  return (\n    <div className=\"App\">\n      {/* {isLoaded ? ( // Affiche le contenu après le chargement complet */}\n        {/* <motion.div\n          initial={{ opacity: 1 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 1 }}\n        >\n          <BrowserRouter>\n          <Loading />  \n          </BrowserRouter>\n        </motion.div> */}\n      {/* ) : ( // Affiche l'écran de chargement pendant le chargement initial */}\n      <Loading />  \n      <Logo/>\n      <Presentation/>\n\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,MAAM,QAAQ,eAAe;AACtC;AACA,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,YAAY,MAAM,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACED,OAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAYlBH,OAAA,CAACT,OAAO;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXP,OAAA,CAACH,IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACPP,OAAA,CAACF,YAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEZ,CAAC;AAEV,CAAC;AAACC,EAAA,GAjCIP,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}